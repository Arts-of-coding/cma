# This is a basic workflow to help you get started with Actions

name: CI/CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main and develop" branch
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  ci:
    # Set up operating system
    runs-on: ubuntu-latest
    
    defaults:
      run:
        shell: bash -l {0}

    # Docker Hub image that `postgres-job` executes in
    #container: node:latest
    # service containers to run with `postgres-job`
    steps:
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
        
    - name: Check-out repository
      uses: actions/checkout@v2

      #- name: Install Python dependencies
      #  uses: py-actions/py-dependency-install@v4
        
    - uses: conda-incubator/setup-miniconda@v2
      with:
        miniconda-version: "latest"
        channels: bioconda, conda-forge, defaults
        use-only-tar-bz2: true  # IMPORTANT: This needs to be set for caching to work properly!
        auto-update-conda: true
        auto-activate-base: true
    - name: Install cma pip
      run: |
            echo "begin: PATH=$PATH;"

            conda create -y --name cma pip python=3.9

            conda activate cma || true
            echo "after conda activate cma: PATH=$PATH;"
            which cma || true
            # Use cma in ci-cd workflow
      
    # Builds a wheel needed for the CD part
    - name: Build wheel of package
      run: pip wheel --no-deps -w dist .
        
    # Tests if the actual wheel file is functional
    - name: Install wheel of package into conda env
      run: pip install dist/cma-0.0.1-py3-none-any.whl --force-reinstall

    # Remove files
    - name: Delete data in directory   
      run: rm -rf cma/data/*
      
    # Download data into own directory
    - name: Download labels  
      run: curl -o training_labels_meta.csv https://github.com/Arts-of-coding/cma/blob/develop/cma/data/training_labels_meta.csv

    - name: Download training 
      run: curl -o small_test.h5ad https://github.com/Arts-of-coding/cma/blob/develop/cma/data/small_test.h5ad

    - name: Download test
      run: curl -o cma_meta_atlas.h5ad https://github.com/Arts-of-coding/cma/blob/develop/cma/data/cma_meta_atlas.h5ad

    # Print current files 1
    - name: Print current dir
      run: pwd
      
    # Print current files 2
    - name: Print files current dir
      run: ls -lh
      
    # Print current files 3
    #- name: Print data directory   
    #  run: ls cma/data/ -a
      
    ## Running unit tests
    #- name: Running unit tests    
    #  run: pytest cma/tests/cma_test.py --cov

# TO DO: write unit tests and add Codecov
